{
  "name": "MOE",
  "tagline": "MOE is an event-driven scheduler system for 8/16/32-bit MCUs. MOE means \"Minds Of Embedded system\", it’s also the name of my lovely baby daughter :)",
  "body": "# MOE   \r\n![LOGO](https://github.com/ianhom/MOE/blob/master/Documents/Pic/MOE_logo_V0_1e.png?raw=true)   \r\n[English](https://github.com/ianhom/MOE/blob/master/README.md) \r\n## 简介\r\nMOE是一个用于8/16/32位MCU多任务事件驱动型的调度系统。MOE的含义为\"Minds Of Embedded system\"，同时也是我宝贝女儿的小名:smile:   \r\nMOE特点如下：      \r\n\r\n | 描述     \r\n----------------- | ---------------------------------------------   \r\n**事件驱动** | 可变的事件队列长度，支持高优先级事件插队.   \r\n**软件定时器** | 实用的软件定时器功能，支持回调.   \r\n**消息机制** | 易用的消息API轻松实现任务间通讯，支持“To All”消息（低RAM消耗）.   \r\n**调试选项** | 灵活的调试选项，每个模块可设置不同的调试信息打印等级;易用的ASSERT.  \r\n**Protothread** | 应用模块支持Protothread的编写方式.\r\n\r\n更多讨论欢迎加入我们的QQ群：**[475258651](https://jq.qq.com/?_wv=1027&k=41PrZvS)**   \r\n\r\n## 如何使用\r\n- **步骤 1**: 将MOE移植到您的硬件上，并为其提供“**系统毫秒时钟**”及“**需要时刻轮询的函数（如果有的话）**”，然后初始化并运行MOE.      \r\n```c\r\n/* 示例代码 */\r\n/* 获取系统毫秒时钟 */\r\nuint16 GetMsClock(void)\r\n{\r\n    return sg_u16SysClk;  /* 返回系统ms时钟，sg_u16SysClk每1毫秒自增1，例如在为定时1毫秒的硬件定时器中断中实现 */\r\n}\r\n\r\n/* 需要被轮询的程序 */\r\nvoid Poll(void)\r\n{\r\n    /* 在这里添加需要轮询的程序 */\r\n    return;\r\n}\r\n\r\nvoid main(void)\r\n{\r\n    ....                         /* 板级初始化 */\r\n    MOE_Init(GetMsClock, Poll);  /* MOE初始化，提供系统毫秒获取时钟函数，及需要被轮询的函数（若无则填写NULL） */\r\n    MOE_Run();                   /* 启动MOE， */\r\n    return;\r\n}\r\n```\r\n- **步骤 2**: **创建**您的TASK或**复用**已有的经过测试的TASK来实现您的应用功能.  \r\n```c\r\n/* 示例代码 */\r\n/* Task 1： LED闪烁*/\r\nuint8 Task_PT_Demo_Process(uint8 u8Evt, void *pPara)\r\n{   \r\n    PT_INIT();\r\n    PT_BEGIN();\r\n    /******************************************************************/\r\n    MOE_MANDATORY_INIT();  /* Mandatory init, shout call it here only */\r\n    /******************************************************************/\r\n    while(1)\r\n    {\r\n        TASK_PT_DEMO_LED_On(LED_RED);\r\n        PT_DELAY(1000);\r\n        TASK_PT_DEMO_LED_Off(LED_RED);\r\n\r\n        TASK_PT_DEMO_LED_On(LED_GREEN);\r\n        PT_DELAY(1000);\r\n        TASK_PT_DEMO_LED_Off(LED_GREEN);\r\n\r\n        TASK_PT_DEMO_LED_On(LED_BLUE);\r\n        PT_DELAY(1000);\r\n        TASK_PT_DEMO_LED_Off(LED_BLUE);\r\n    }\r\n    PT_END();\r\n    return SW_OK;\r\n}\r\n```   \r\n\r\n```c\r\n/* 示例代码 */\r\n/* Task 2：周期打印 */\r\nuint8 Task_PT_Demo2_Process(uint8 u8Evt, void *pPara)\r\n{    \r\n    PT_INIT(); \r\n    PT_BEGIN();\r\n    /******************************************************************/\r\n    MOE_MANDATORY_INIT();  /* Mandatory init, shout call it here only */\r\n    /******************************************************************/\r\n    while(1)\r\n    {\r\n        DBG_PRINT(\"I am another Task!!\\n\");\r\n        PT_DELAY(1000);\r\n    }\r\n\r\n    PT_END();\r\n    return SW_OK;\r\n}\r\n```\r\n\r\n- **步骤 3**: 在**Project_Config.h**文件中**注册**需要运行的TASK，并在该文件中进行其它**相关配置**.   \r\n```c\r\n#define LIST_OF_REG_TASK \\\r\n        REG_TASK(Task_PT_Demo_Proces)\\\r\n        REG_TASK(Task_PT_Demo2_Proces)\r\n```\r\n- **步骤 4**: 运行，Enjoy. :smile:\r\n\r\n## 文档参考\r\n - [API说明](https://github.com/ianhom/MOE/blob/master/Documents/API_Description_Chinese.md)    \r\n - [设计笔记](https://github.com/ianhom/MOE/blob/master/Documents/Design_Record.md)    \r\n \r\n## 特别感谢\r\n- :tada:**蔡嘉楠小姐**对MOE Logo的精心绘制。:tada:\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}